name: Windows MinGW
on: 
  push:
    paths:
      - '*.pro'
      - 'src/**'
      - '3rdparty/**'
      - 'res/**'
      - '.github/workflows/windows-mingw.yml'
  pull_request:
    paths:
      - '*.pro'
      - 'src/**'
      - '3rdparty/**'
      - 'res/**'
      - '.github/workflows/windows-mingw.yml'
jobs:
  build:
    name: Build
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - qt_arch: win64_mingw
            qt_ver: 6.2.2
            qt_tools: 'tools_mingw90,9.0.0-1-202203221220,qt.tools.win64_mingw900'
            qt_tools_mingw_install: mingw900_64
    env:
      targetName: bilibili-live-danmuku.exe
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '${{ matrix.qt_ver }}'
          host: 'windows'
          target: 'desktop'
          arch: ${{ matrix.qt_arch }}
          tools: ${{ matrix.qt_tools }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: qtwebsockets
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Qt 6 environment configuration
        shell: pwsh
        run: |
          Write-Output "${{ env.Qt6_DIR }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Output "${{ env.Qt6_DIR }}/../../Tools/${{ matrix.qt_tools_mingw_install }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: where is qmake & where is mingw32-make
        shell: pwsh
        run: |
          Get-Command -Name 'qmake' | Format-List
          Get-Command -Name 'mingw32-make' | Format-List
      # Debugger start
      # - uses: shaowenchen/debugger-action@v2
      #   name: debugger
      #   timeout-minutes: 30
      #   continue-on-error: true
      #   with:
      #     ngrok_token: ${{ secrets.NGROK_TOKEN }}
      # Debugger end
      - name: mingw-build
        id: build
        shell: cmd
        run: |
          qmake
          "${{ env.IQTA_TOOLS }}/${{ matrix.qt_tools_mingw_install }}/bin/mingw32-make.exe" release
      - name: package
        id: package
        env:
          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
        shell: pwsh
        run: |
          & scripts\windows-mingw-publish.ps1 ${env:archiveName} ${env:targetName}
           $name = ${env:archiveName}
           echo "::set-output name=packageName::$name"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.packageName }}
          path: ${{ steps.package.outputs.packageName }}
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ github.ref }}
          overwrite: true