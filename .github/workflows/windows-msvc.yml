name: Windows MSVC
on: 
  push:
    paths:
      - '*.pro'
      - 'src/**'
      - '3rdparty/**'
      - 'res/**'
      - '.github/workflows/windows-msvc.yml'
  pull_request:
    paths:
      - '*.pro'
      - 'src/**'
      - '3rdparty/**'
      - 'res/**'
      - '.github/workflows/windows-msvc.yml'
jobs:
  build:
    name: Build
    runs-on: windows-2019
    env:
      targetName: bilibili-live-danmuku.exe
      qt_ver: 6.2.2
      qt_arch: win64_msvc2019_64
      msvc_arch: x64
      qt_arch_install: msvc2019_64
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '${{ env.qt_ver }}'
          aqtversion: '==2.0.6'
          host: 'windows'
          target: 'desktop'
          arch: ${{ env.qt_arch }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: qtwebsockets
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: msvc-build
        id: build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ env.msvc_arch }}
          qmake
          nmake
          echo winSdkDir=%WindowsSdkDir% >> %GITHUB_ENV%
          echo winSdkVer=%WindowsSdkVersion% >> %GITHUB_ENV%
          echo vcToolsInstallDir=%VCToolsInstallDir% >> %GITHUB_ENV%
          echo vcToolsRedistDir=%VCToolsRedistDir% >> %GITHUB_ENV%
      - name: package
        id: package
        env:
          archiveName: ${{ env.qt_arch }}
          msvcArch: ${{ env.msvc_arch }}
        shell: pwsh
        run: |
          & ./scripts/windows-msvc-package.ps1 ${env:archiveName} ${env:targetName}
           $name = ${env:archiveName}
           echo "::set-output name=packageName::$name"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.packageName }}
          path: ${{ steps.package.outputs.packageName }}