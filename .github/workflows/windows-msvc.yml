name: Windows MSVC

on:
  push:
    paths:
      - 'src/**'
      - 'res/**'
      - '.github/workflows/windows-msvc.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'res/**'
      - '.github/workflows/windows-msvc.yml'

env:
  BUILD_TYPE: Release
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build:
    name: Build
    runs-on: windows-2022
    env:
      targetName: bilibili-live-danmuku.exe
      qt_ver: 6.8.1
      qt_arch: win64_msvc2022_64
      msvc_arch: x64

    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.qt_ver }}
          arch: ${{ env.qt_arch }}
          modules: qtwebsockets
          cache: true

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git 
          .\vcpkg\bootstrap-vcpkg.bat

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ env.msvc_arch }}

      - name: Configure CMake
        run: >
          cmake
          -B ./build
          -G Ninja
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        id: build
        shell: pwsh
        run: cmake --build ./build --config ${{ env.BUILD_TYPE }} -j 4

      - name: Install
        run: cmake --install ./build --config ${{ env.BUILD_TYPE }} --prefix ./build/install

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.qt_arch }}-${{ env.msvc_arch }}-${{ env.BUILD_TYPE }}
          path: ./build/install/
